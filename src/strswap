#!/bin/bash
#
#	Linux utility to recursively search and replace text inside files 
#
#       - Recursively search for text inside files
#       - Search all files with the input file extension
#       - The tool doesn't touch symbolic link
#		- If symbolic link points to a file outsite the directory ( No search/replace operation happen outside the current directory ) 
#       - No backup file will be created, It is the responsibility of the user to take a backup
#	    - Recursively search all the sub directories
#		- Support File Names with whitespace 
#
#    Useful for:
#
#        - Web Site Admin
#        - System Admin
#
#
#
#	Author   : Viki (a) Vignesh Natarajan
#	Contact  : vikiworks.io  
#
#

S="$1"
R="$2"
E="$3"
Q="$4"

ARGC=$#

function usage(){
    echo
    echo "  usage : $0 <search string> < replace string > <file extension>"
    echo
    echo "  note  : don't use wildcard characters in input example "*" "
    echo
}

function input_validation(){
    if [ -z "$S" ]; then
        usage
        exit 1
    fi

    if [ -z "$R" ]; then
        usage
        exit 1
    fi

    if [ -z "$E" ]; then
        usage
        exit 1
    fi

	if [[ "$S" == *"*"* ]]; then
		echo
  		echo "  error: wildcard character ( * ) not supported"
		usage
		exit 1
	fi

	if [[ "$R" == *"*"* ]]; then
		echo
  		echo "  error: wildcard character ( * ) not supported"
		usage
		exit 1
	fi

	if [[ "$E" == *"*"* ]]; then
		echo
  		echo "  error: wildcard character ( * ) not supported"
		usage
		exit 1
	fi


	if [[ "$E" != *"."* ]]; then
		echo
  		echo "  error: file extension without (.) is not supported"
		usage
		exit 1
	fi

	if [ $ARGC -gt 4 ]; then 
		echo
		echo "  error: more of inputs than expected"
		usage
		exit 1
	fi
}

function print_info(){
    echo
    echo " Search String  : $S"
    echo " Replace String : $R"
    echo " File Extension : $E"
    echo
}

function user_confirmation(){
	if [ "$Q" == "-q" ]; then
		return
	fi

    echo
    read -p " Do you want to recursively search and replace? ( Y/N )" -n 1 -r
    echo
    echo

    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo " note:   abort search and replace operation"
        exit 1
    fi
}

function search_n_replace(){
	echo " Search and Replace    [  Begin  ]"
	echo
    #find will not list symbolic link
	find . -type f -name "*${E}"  | while read -r F; do echo "S [ $S ] R [ $R ] F [ $F ]"; sed -i -e "s/$S/$R/g" "$F";done
	echo
	echo " Search and Replace    [  End    ]"
	echo
}

input_validation
print_info
user_confirmation
search_n_replace
